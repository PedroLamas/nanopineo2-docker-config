version: '3.7'

services:
  adguardhome:
    image: adguard/adguardhome
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.3
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "853:853"
    volumes:
      - "./adguardhome/work:/opt/adguardhome/work"
      - "./adguardhome/conf:/opt/adguardhome/conf"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns:
      - 127.0.0.1
      - 1.1.1.1

  nginx:
    depends_on:
      - adguardhome
      - homeassistant
      - grafana
      - portainer
      - esphome
    image: nginx
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.4
    ports:
      - "80:80"
      - "443:443"
      - "21443:21443"
    extra_hosts:
      - "homeassistant:172.17.0.1"
      - "esphome:172.17.0.1"
    volumes:
      - "./nginx/etc-nginx/nginx.template:/etc/nginx/nginx.template:ro"
      - "./nginx/etc-nginx-cf-certs:/etc/nginx/cf-certs"
      - "./nginx/etc-nginx-le-certs:/etc/nginx/le-certs"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    env_file: ./nginx/docker/secrets.env
    command: >
      sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\" < /etc/nginx/nginx.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    dns: 10.0.0.3
    labels:
      - sh.acme.target

  homeassistant:
    depends_on:
      - mariadb
      - mosquitto
    image: homeassistant/home-assistant
    restart: unless-stopped
    network_mode: host
    volumes:
      - "./homeassistant/config:/config"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - PYTHONWARNINGS=ignore:Unverified HTTPS request
    dns: 10.0.0.3

  mosquitto:
    depends_on:
      - adguardhome
    image: eclipse-mosquitto
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.6
    ports:
      - "1883:1883"
      - "9001:9001"
#    volumes:
#      - "./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro"
#      - "./mosquitto/config/password_file:/mosquitto/config/password_file"
#      - "./mosquitto/config/acl_file:/mosquitto/config/acl_file"
    dns: 10.0.0.3

  zigbee2mqtt:
    depends_on:
      - mosquitto
    image: koenkk/zigbee2mqtt
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.7
    volumes:
      - "./zigbee2mqtt/data:/app/data"
      # - "./zigbee2mqtt/zigbee-herdsman-converters:/app/node_modules/zigbee-herdsman-converters"
      # - "./zigbee2mqtt/homeassistant-extension/homeassistant.js:/app/lib/extension/homeassistant.js"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    # environment:
    #   - DEBUG=*
    devices:
       - "/dev/ttyACM0:/dev/ttyACM0"
    dns: 10.0.0.3

  telegraf:
    depends_on:
      - adguardhome
    image: telegraf
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.8
    volumes:
      - "./telegraf/config/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns: 10.0.0.3

  mariadb:
    depends_on:
      - adguardhome
    image: mariadb
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.9
    volumes:
      - "./mariadb/data:/var/lib/mysql"
      - "./mariadb/secrets:/var/lib/secrets:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/var/lib/secrets/mysql-root-password
    dns: 10.0.0.3

  grafana:
    depends_on:
      - adguardhome
    image: grafana/grafana
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.10
    volumes:
      - "./grafana/data:/var/lib/grafana"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns: 10.0.0.3

  portainer:
    depends_on:
      - adguardhome
    image: portainer/portainer
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.11
    volumes:
      - "./portainer/data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns: 10.0.0.3

  esphome:
    depends_on:
      - adguardhome
    image: esphome/esphome-aarch64
    restart: unless-stopped
    network_mode: host
    volumes:
      - "./esphome/config:/config"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - ESPHOME_DASHBOARD_USE_PING=true
    dns: 10.0.0.3

  acme.sh:
    depends_on:
      - adguardhome
    image: guillaumedsde/acme.sh
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.13
    volumes:
      - "./acme.sh/data:/acme.sh"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    env_file: ./acme.sh/docker/secrets.env
    command: daemon
    environment:
      - DEPLOY_DOCKER_CONTAINER_LABEL=sh.acme.target
      - DEPLOY_DOCKER_CONTAINER_KEY_FILE=/etc/nginx/le-certs/key.pem
      - DEPLOY_DOCKER_CONTAINER_CERT_FILE="/etc/nginx/le-certs/cert.pem"
      - DEPLOY_DOCKER_CONTAINER_CA_FILE="/etc/nginx/le-certs/ca.pem"
      - DEPLOY_DOCKER_CONTAINER_FULLCHAIN_FILE="/etc/nginx/le-certs/full.pem"
      - DEPLOY_DOCKER_CONTAINER_RELOAD_CMD="service nginx force-reload"
    dns: 10.0.0.3

  vscode:
    depends_on:
      - homeassistant
    image: codercom/code-server
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.14
    ports:
      - "8080:8080"
    volumes:
      - "./vscode/data:/home/coder/.local/share/code-server"
      - "./:/home/coder/project"
    env_file: ./vscode/docker/secrets.env
    command: >
      --auth none --disable-telemetry project
    dns: 10.0.0.3

networks:
  backbone:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/27
