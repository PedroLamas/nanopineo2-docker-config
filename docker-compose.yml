version: '3.7'

services:
  # cloudflared:
  #   image: visibilityspots/cloudflared:arm64
  #   restart: unless-stopped
  #   networks:
  #     backbone:
  #       ipv4_address: 10.0.0.2
  #   volumes:
  #     - "/etc/localtime:/etc/localtime:ro"
  #     - "/etc/timezone:/etc/timezone:ro"

  # pihole:
  #   depends_on:
  #     - cloudflared
  #   image: pihole/pihole
  #   restart: unless-stopped
  #   hostname: pihole
  #   networks:
  #     backbone:
  #       ipv4_address: 10.0.0.3
  #   ports:
  #     - "53:53/tcp"
  #     - "53:53/udp"
  #     - "80:80"
  #   volumes:
  #     - "./pihole/etc-pihole/:/etc/pihole/"
  #     - "./pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/"
  #   environment:
  #     - DNS1=10.0.0.2#5054
  #     - DNS2=no
  #     - IPv6=false
  #     - TZ=Europe/London
  #     - DNSMASQ_LISTENING=all
  #     - WEBPASSWORD=admin
  #     - VIRTUAL_HOST=nanopineo2.local.maialamas.com
  #   dns:
  #     - 127.0.0.1
  #     - 1.1.1.1

  adguardhome:
    image: adguard/adguardhome:arm64-latest
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.3
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80"
      # - "443:443"
      - "853:853"
      # - "3000:3000"
    volumes:
      - "./adguardhome/work:/opt/adguardhome/work"
      - "./adguardhome/conf:/opt/adguardhome/conf"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns:
      - 127.0.0.1
      - 1.1.1.1

  nginx:
    depends_on:
      - homeassistant
    image: nginx
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.4
    ports:
      - "443:443"
    volumes:
      - "./nginx/etc-nginx/nginx.template:/etc/nginx/nginx.template:ro"
      - "./nginx/etc-nginx-certs:/etc/nginx/certs"
    env_file: ./nginx/docker/secrets.env
    command: >
      sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\" < /etc/nginx/nginx.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    dns: 10.0.0.3

  homeassistant:
    depends_on:
      - mariadb
      - mosquitto
    image: homeassistant/home-assistant
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.5
    ports:
      - "8123:8123"
    volumes:
      - "./homeassistant/config:/config"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - PYTHONWARNINGS=ignore:Unverified HTTPS request
    dns: 10.0.0.3

  mosquitto:
    depends_on:
      - adguardhome
    image: eclipse-mosquitto
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.6
    ports:
      - "1883:1883"
      - "9001:9001"
#    volumes:
#      - "./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro"
#      - "./mosquitto/config/password_file:/mosquitto/config/password_file"
#      - "./mosquitto/config/acl_file:/mosquitto/config/acl_file"
    dns: 10.0.0.3

  zigbee2mqtt:
    depends_on:
      - mosquitto
    image: koenkk/zigbee2mqtt
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.7
    volumes:
      - "./zigbee2mqtt/data:/app/data"
      # - "./zigbee2mqtt/zigbee-herdsman-converters:/app/node_modules/zigbee-herdsman-converters"
      # - "./zigbee2mqtt/homeassistant-extension/homeassistant.js:/app/lib/extension/homeassistant.js"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    # environment:
    #   - DEBUG=*
    devices:
       - "/dev/ttyACM0:/dev/ttyACM0"
    dns: 10.0.0.3

  telegraf:
    depends_on:
      - adguardhome
    image: telegraf
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.8
    volumes:
      - "./telegraf/config/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns: 10.0.0.3

  mariadb:
    depends_on:
      - adguardhome
    image: mariadb
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.9
    volumes:
      - "./mariadb/data:/var/lib/mysql"
      - "./mariadb/secrets:/var/lib/secrets:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/var/lib/secrets/mysql-root-password
    dns: 10.0.0.3

  grafana:
    depends_on:
      - adguardhome
    image: grafana/grafana:7.0.0-beta1
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.10
    ports:
      - "3000:3000"
    volumes:
      - "./grafana/data:/var/lib/grafana"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns: 10.0.0.3

  portainer:
    depends_on:
      - adguardhome
    image: portainer/portainer
    restart: unless-stopped
    networks:
      backbone:
        ipv4_address: 10.0.0.11
    ports:
      - "9000:9000"
    volumes:
      - "./portainer/data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    dns: 10.0.0.3

networks:
  backbone:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/27
